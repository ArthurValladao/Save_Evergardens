// script.js

const startScreen = document.getElementById("startScreen");
const gameContainer = document.getElementById("gameContainer");
const creditsInfo = document.getElementById("creditsInfo");

const fases = [
  {
    personagem: "Velho Ranzinza",
    enigmas: [
      "O que √© que quanto mais se tira, maior fica?",
      "O que √© que tem dentes mas n√£o come?",
      "O que √©, o que √©: Tem cabe√ßa e tem dentes, mas n√£o √© bicho nem gente?",
      "O que √©, o que √©: Cai em p√© e corre deitado?",
    ],
    respostas: ["um buraco", "um pente", "o alho", "a chuva"],
    medalha: "ü•á",
    bodyClass: "fase-0-bg",
    containerClass: "fase-0-container",
  },
  {
    personagem: "Dona Bruma",
    enigmas: [
      "O que n√£o tem boca, mas fala; n√£o tem ouvidos, mas ouve?",
      "Qual o animal que anda com os p√©s na cabe√ßa?",
      "O que √©, o que √©: Quanto mais quente, mais fresco √©?",
      "O que √©, o que √©: Tem rabo, mas n√£o √© c√£o; tem escamas, mas n√£o √© peixe?",
    ],
    respostas: ["o eco", "o piolho", "o p√£o", "a balan√ßa"],
    medalha: "ü•à",
    bodyClass: "fase-1-bg",
    containerClass: "fase-1-container",
  },
  {
    personagem: "Mestre Miau",
    enigmas: [
      "Tenho cidades, mas n√£o casas. Montanhas, mas n√£o √°rvores. E √°gua, mas n√£o peixes. O que sou?",
      "O que √©, o que √©: Tem olhos, mas n√£o v√™?",
      "O que √©, o que √©: Nasce grande e morre pequeno?",
      "O que √©, o que √©: Sobe e desce, mas n√£o sai do lugar?",
    ],
    respostas: ["um mapa", "o furac√£o", "o l√°pis", "a escada"],
    medalha: "ü•â",
    bodyClass: "fase-2-bg",
    containerClass: "fase-2-container",
  },
  {
    personagem: "T-√ìrion",
    enigmas: [
      "Qual √© o √∫nico n√∫mero que, quando voc√™ tira metade dele, ele ainda continua o mesmo?",
      "O que √©, o que √©: De dia tem 4 p√©s e de noite tem 6?",
      "O que √©, o que √©: Voa sem ter asas e chora sem ter olhos?",
      "O que √©, o que √©: Quanto mais se perde, mais se tem?",
    ],
    respostas: ["o n√∫mero 8", "a cama", "a nuvem", "o sono"],
    medalha: "üèÖ",
    bodyClass: "fase-3-bg",
    containerClass: "fase-3-container",
  },
  {
    personagem: "L√∫mina",
    enigmas: [
      "Voc√™ me v√™ no come√ßo da noite e no fim da manh√£. O que sou?",
      "O que √©, o que √©: Pode-se quebrar falando?",
      "O que √©, o que √©: Anda sem ter p√©s, e tem um chap√©u que n√£o √© de sol?",
      "O que √©, o que √©: Tem pesco√ßo e n√£o tem cabe√ßa, tem bra√ßos e n√£o tem m√£os?",
    ],
    respostas: ["a letra n", "o segredo", "o cogumelo", "a camisa"],
    medalha: "üéñÔ∏è",
    bodyClass: "fase-4-bg",
    containerClass: "fase-4-container",
  },
  {
    personagem: "Capit√£o Sombra",
    enigmas: [
      "Tenho um pesco√ßo mas n√£o tenho cabe√ßa, e uso dois bra√ßos mas n√£o tenho m√£os. O que sou?",
      "O que √©, o que √©: Tem casa, mas mora fora dela?",
      "O que √©, o que √©: Tem bacha, mas n√£o tem boca?",
      "O que √©, o que √©: Se voc√™ me tem, quer me dividir; se me divide, n√£o me tem mais?",
    ],
    respostas: ["uma camisa", "o caracol", "a chaleira", "o segredo"],
    medalha: "üèµÔ∏è",
    bodyClass: "fase-5-bg",
    containerClass: "fase-5-container",
  },
  {
    personagem: "S√°bio Medalhon",
    enigmas: [
      "Quanto mais voc√™ compartilha, mais voc√™ tem. O que √©?",
      "O que √©, o que √©: Tem linha, mas n√£o costura?",
      "O que √©, o que √©: Est√° sempre no meio do caminho?",
      "O que √©, o que √©: Entra na √°gua e n√£o se molha?",
    ],
    respostas: ["conhecimento", "o anzol", "a letra h", "a sombra"],
    medalha: "ü•á",
    bodyClass: "fase-6-bg",
    containerClass: "fase-6-container",
  },
];

let faseAtual = 0;
let enigmaAtualDaFase = 0; // Vari√°vel para controlar o enigma dentro da fase
let medalhas = [];

const body = document.body;
const container = document.querySelector(".container");

function startGame() {
  // 1. Adiciona a classe 'fade-out' para iniciar a transi√ß√£o de sa√≠da da tela de in√≠cio
  startScreen.classList.add("fade-out");

  // 2. Espera a dura√ß√£o da transi√ß√£o CSS (0.5 segundos) antes de esconder a tela inicial e mostrar o jogo
  setTimeout(() => {
    startScreen.style.display = "none"; // Esconde completamente ap√≥s a transi√ß√£o
    gameContainer.style.display = "flex"; // Torna o container do jogo vis√≠vel (mas ainda transparente)

    // 3. Adiciona a classe 'visible' ao gameContainer para iniciar a transi√ß√£o de entrada
    gameContainer.classList.add("visible");

    atualizarFase(); // Inicia a l√≥gica da primeira fase do jogo
  }, 500); // O tempo aqui deve ser igual ou um pouco maior que a dura√ß√£o da sua transi√ß√£o CSS (0.5s = 500ms)
}

function showCredits() {
  creditsInfo.style.display = "block";
}

function hideCredits() {
  creditsInfo.style.display = "none";
}

function atualizarFase() {
  const fase = fases.at(faseAtual); // Pega o objeto da fase atual

  // Remove as classes anteriores do body e do container
  body.className = "";
  container.className = "container";

  // Adiciona as novas classes de estilo para o body e container
  body.classList.add(fase.bodyClass);
  container.classList.add(fase.containerClass);

  document.getElementById("character").textContent = `üë§ ${fase.personagem}`;
  // Exibe o enigma correto do array de enigmas da fase atual
  document.getElementById("question").textContent =
    fase.enigmas[enigmaAtualDaFase];
  document.getElementById("answerInput").value = "";
  document.getElementById("feedback").textContent = "";
}

function checkAnswer() {
  const input = document
    .getElementById("answerInput")
    .value.trim()
    .toLowerCase();
  const fase = fases.at(faseAtual); // Pega o objeto da fase atual

  // Verifica se a fase e o enigma existem antes de tentar acessar
  if (!fase || enigmaAtualDaFase >= fase.enigmas.length) {
    console.error("Erro: Enigma ou fase inv√°lida.");
    return;
  }

  const respostaCorreta = fase.respostas[enigmaAtualDaFase].toLowerCase(); // Pega a resposta correspondente

  if (input === respostaCorreta) {
    document.getElementById("feedback").textContent = "Resposta correta!"; // Feedback positivo

    enigmaAtualDaFase++; // Tenta avan√ßar para o pr√≥ximo enigma dentro da fase

    // Verifica se ainda h√° enigmas a serem respondidos NESTA FASE
    if (enigmaAtualDaFase < fase.enigmas.length) {
      // Se sim, carrega o pr√≥ximo enigma da mesma fase ap√≥s um pequeno delay para o jogador ver o feedback
      setTimeout(() => {
        atualizarFase();
      }, 800); // 0.8 segundos de delay
    } else {
      // Se todos os enigmas desta fase foram respondidos, avan√ßa para a pr√≥xima FASE
      medalhas.push(fase.medalha); // Concede a medalha da fase
      enigmaAtualDaFase = 0; // Reseta o contador de enigmas para a primeira enigma da PR√ìXIMA fase
      faseAtual++; // Avan√ßa para a pr√≥xima fase principal

      // Verifica se ainda h√° fases no jogo
      if (faseAtual < fases.length) {
        // Carrega a nova fase e seu primeiro enigma ap√≥s um delay para o feedback
        setTimeout(() => {
          atualizarFase();
        }, 800);
      } else {
        // Se todas as fases e enigmas foram conclu√≠dos
        document.querySelector(
          ".container"
        ).innerHTML = `<h2>Parab√©ns! Voc√™ conquistou todas as medalhas! üèÜ</h2>`;
        body.className = ""; // Limpa as classes de fundo
        container.className = "container"; // Reseta o container
        body.style.backgroundImage = "none"; // Remove imagem de fundo
        body.style.backgroundColor = "#f4f4f4"; // Define uma cor de fundo neutra
      }
    }
    atualizarMedalhas(); // Atualiza a exibi√ß√£o das medalhas (vis√≠vel ao conceder uma)
  } else {
    document.getElementById("feedback").textContent =
      "Resposta incorreta. Tente novamente!";
  }
}

function atualizarMedalhas() {
  document.getElementById("medals").textContent = `Medalhas: ${medalhas.join(
    " "
  )}`;
}

// O jogo come√ßa quando o bot√£o "Jogar" √© clicado na tela de in√≠cio.
// N√£o precisamos chamar atualizarFase() ou startGame() aqui inicialmente.
